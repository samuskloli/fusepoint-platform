const slugService = require('./server/services/slugService');

async function testSlugGeneration() {
  console.log('üß™ Test de g√©n√©ration automatique de slugs\n');

  // Test 1: G√©n√©ration de slug basique
  console.log('Test 1: G√©n√©ration de slug basique');
  const slug1 = await slugService.generateUniqueSlug('Mon Premier LinkPoint');
  console.log(`Nom: "Mon Premier LinkPoint" ‚Üí Slug: "${slug1}"`);

  // Test 2: G√©n√©ration avec caract√®res sp√©ciaux
  console.log('\nTest 2: G√©n√©ration avec caract√®res sp√©ciaux');
  const slug2 = await slugService.generateUniqueSlug('Caf√© & Restaurant - 50% de r√©duction!');
  console.log(`Nom: "Caf√© & Restaurant - 50% de r√©duction!" ‚Üí Slug: "${slug2}"`);

  // Test 3: G√©n√©ration avec nom tr√®s long
  console.log('\nTest 3: G√©n√©ration avec nom tr√®s long');
  const slug3 = await slugService.generateUniqueSlug('Ceci est un nom de LinkPoint extr√™mement long qui devrait √™tre tronqu√© pour respecter la limite de caract√®res');
  console.log(`Nom long ‚Üí Slug: "${slug3}"`);

  // Test 4: G√©n√©ration de slug pour duplication
  console.log('\nTest 4: G√©n√©ration de slug pour duplication');
  const duplicateSlug = await slugService.generateDuplicateSlug('mon-premier-linkpoint');
  console.log(`Slug original: "mon-premier-linkpoint" ‚Üí Slug dupliqu√©: "${duplicateSlug}"`);

  // Test 5: Test de la fonction sanitizeName
  console.log('\nTest 5: Test de la fonction sanitizeName');
  const sanitized = slugService.sanitizeName('√âv√©nement Sp√©cial 2024 - 100% Gratuit!!!');
  console.log(`Nom: "√âv√©nement Sp√©cial 2024 - 100% Gratuit!!!" ‚Üí Sanitized: "${sanitized}"`);

  console.log('\n‚úÖ Tests termin√©s avec succ√®s!');
}

// Ex√©cuter les tests
testSlugGeneration().catch(console.error);
#!/usr/bin/env node

/**
 * Script de diagnostic pour analyser les connexions de base de donn√©es
 * et identifier les probl√®mes de pool de connexions
 */

import path from 'path';
import fs from 'fs';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

console.log('üîç Diagnostic des connexions de base de donn√©es...\n');

// V√©rifier la configuration de la base de donn√©es
const serverPath = path.join(__dirname, 'server');
const configPath = path.join(serverPath, 'config');

console.log('üìÅ V√©rification des fichiers de configuration...');

// Chercher les fichiers de configuration de DB
const configFiles = [
  'database.js',
  'db.js',
  'config.js',
  '.env',
  'knexfile.js'
];

configFiles.forEach(file => {
  const filePath = path.join(configPath, file);
  const rootFilePath = path.join(serverPath, file);
  
  if (fs.existsSync(filePath)) {
    console.log(`‚úÖ Trouv√©: ${filePath}`);
  } else if (fs.existsSync(rootFilePath)) {
    console.log(`‚úÖ Trouv√©: ${rootFilePath}`);
  } else {
    console.log(`‚ùå Non trouv√©: ${file}`);
  }
});

console.log('\nüîß Recommandations pour corriger le probl√®me de pool:');
console.log('1. Augmenter la limite du pool de connexions');
console.log('2. R√©duire le timeout des connexions');
console.log('3. Impl√©menter une lib√©ration automatique des connexions');
console.log('4. Ajouter un monitoring des connexions actives');

console.log('\nüìã Actions √† effectuer:');
console.log('- Red√©marrer le serveur backend');
console.log('- V√©rifier la configuration du pool MariaDB');
console.log('- Nettoyer les connexions orphelines');

console.log('\nüöÄ Pour red√©marrer le serveur:');
console.log('cd server && npm start');
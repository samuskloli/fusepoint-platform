🔑 Clé de chiffrement générée. Ajoutez DB_ENCRYPTION_KEY à votre .env
🔄 Cache des données d'entreprise vidé pour forcer le rechargement
🚀 Création instance PlatformSettingsService...
🔧 Initialisation PlatformSettingsService
📁 Chemin DB: /Users/oliveirasamuel/Plateforme Marketing Fusepoint/fusepoint-platform/server/database/fusepoint.db
📄 Fichier existe: true
✅ Instance créée avec succès
🔍 getAllSettings disponible: function
🔍 getPlatformStats disponible: function
✅ Service exporté avec succès
🏁 Fin du fichier platformSettingsService.js
🔧 Initialisation du service email...
🔧 NODE_ENV: production
🔧 SMTP_HOST: mail.infomaniak.com
🔧 SMTP_PORT: 465
🔧 SMTP_SECURE: true
🔧 SMTP_USER: info@fusepoint.ch
🔧 EMAIL_FROM: info@fusepoint.ch
📧 Configuration SMTP: {
  host: 'mail.infomaniak.com',
  port: 465,
  secure: true,
  user: 'info@fusepoint.ch'
}
📧 Service email initialisé avec SMTP Infomaniak
🔍 Vérification de la connexion SMTP...
🔧 Initialisation du service email...
🔧 NODE_ENV: production
🔧 SMTP_HOST: mail.infomaniak.com
🔧 SMTP_PORT: 465
🔧 SMTP_SECURE: true
🔧 SMTP_USER: info@fusepoint.ch
🔧 EMAIL_FROM: info@fusepoint.ch
📧 Configuration SMTP: {
  host: 'mail.infomaniak.com',
  port: 465,
  secure: true,
  user: 'info@fusepoint.ch'
}
📧 Service email initialisé avec SMTP Infomaniak
🔍 Vérification de la connexion SMTP...
🔍 Debug platformService: {
  isObject: true,
  constructor: 'PlatformSettingsService',
  hasGetPlatformStats: true,
  hasGetAllSettings: true,
  methods: [
    'constructor',
    'initializeDefaultSettings',
    'createSettingIfNotExists',
    'getAllSettings',
    'getSettingsByCategory',
    'getSetting',
    'updateSetting',
    'updateOrCreateSetting',
    'createSetting',
    'deleteSetting',
    'getPlatformStats'
  ]
}
✅ Configuration SMTP initialisée
✅ Connexion DB réussie
✅ Paramètres par défaut initialisés
Table system_logs initialisée avec succès
✅ Répertoires de sauvegarde initialisés
Tables de permissions initialisées avec succès
📊 Tables principales créées avec succès
📊 Tables principales créées avec succès
📊 Tables principales créées avec succès
📊 Tables principales créées avec succès
🤖 Tables agent créées avec succès
🤖 Tables agent créées avec succès
🤖 Tables agent créées avec succès
🤖 Tables agent créées avec succès
👥 Tables prestataire créées avec succès
👥 Tables prestataire créées avec succès
👥 Tables prestataire créées avec succès
👥 Tables prestataire créées avec succès
🔗 Table agent_clients créée avec succès
⚠️ Tables projets clients temporairement désactivées pour debug
ℹ️ Colonnes users gérées par la migration principale
🔗 Table agent_clients créée avec succès
⚠️ Tables projets clients temporairement désactivées pour debug
ℹ️ Colonnes users gérées par la migration principale
🔗 Table agent_clients créée avec succès
⚠️ Tables projets clients temporairement désactivées pour debug
ℹ️ Colonnes users gérées par la migration principale
🔗 Table agent_clients créée avec succès
⚠️ Tables projets clients temporairement désactivées pour debug
ℹ️ Colonnes users gérées par la migration principale
ℹ️ Migration password_hash déjà appliquée ou non nécessaire
ℹ️ Migration password_hash déjà appliquée ou non nécessaire
ℹ️ Migration password_hash déjà appliquée ou non nécessaire
ℹ️ Migration password_hash déjà appliquée ou non nécessaire
✅ Migration client_prestataire_assignments appliquée
✅ Base de données initialisée avec succès
Base de données accompagnement connectée
✅ Migration client_prestataire_assignments appliquée
✅ Base de données initialisée avec succès
Base de données accompagnement connectée
✅ Migration client_prestataire_assignments appliquée
✅ Base de données initialisée avec succès
✅ PrestataireInvitationService: Base de données initialisée
✅ Migration client_prestataire_assignments appliquée
✅ Base de données initialisée avec succès
✅ Base de données initialisée
Tables accompagnement créées avec succès
Tables accompagnement créées avec succès
📊 Tables principales créées avec succès
🤖 Tables agent créées avec succès
👥 Tables prestataire créées avec succès
🔗 Table agent_clients créée avec succès
⚠️ Tables projets clients temporairement désactivées pour debug
ℹ️ Colonnes users gérées par la migration principale
ℹ️ Migration password_hash déjà appliquée ou non nécessaire
✅ Migration client_prestataire_assignments appliquée
✅ Base de données initialisée avec succès
🔍 Exécution requête: CREATE TABLE IF NOT EXISTS conversations (
       ...
🔍 Exécution requête: CREATE TABLE IF NOT EXISTS messages (
          id...
🔍 Exécution requête: CREATE TABLE IF NOT EXISTS conversation_participan...
🔍 Exécution requête: CREATE TABLE IF NOT EXISTS chat_notifications (
  ...
🔍 Création index conversations...
🔍 Création index messages...
🔍 Création index conversation_participants (conversation)...
🔍 Création index conversation_participants (user)...
🔍 Création index chat_notifications (user)...
🔍 Création index chat_notifications (conversation)...
🔍 Création index chat_notifications (read)...
✅ Index créés avec succès (avec vérifications)
✅ Tables de chat créées avec succès
✅ Service de chat initialisé

🚀 ===== FUSEPOINT PLATFORM API =====
📅 Démarré le: 04/08/2025 23:21:25
🌐 Port: 8080
🔧 Environnement: production
💾 Base de données: SQLite (initialisée)
🤖 Service de chat: Actif
📧 Service email: Configuré
🔐 Authentification: JWT
📊 Analytics: Google Analytics proxy
🛡️ Sécurité: Helmet, CORS, Rate limiting
📁 Upload: Multer avec optimisation d'images

🌍 URLs disponibles:
   • API: http://localhost:8080/api
   • Documentation: http://localhost:8080/api
   • Santé: http://localhost:8080/health
   • Production: https://beta.fusepoint.ch

✅ Serveur prêt à recevoir les connexions
=====================================

✅ Connexion SMTP vérifiée avec succès
✅ Connexion SMTP vérifiée avec succès

🛑 Signal SIGINT reçu, arrêt en cours...
🔌 Serveur HTTP fermé
🔒 Connexion base de données fermée
💾 Base de données fermée
📧 Service email fermé
✅ Arrêt propre terminé

require('dotenv').config();
const path = require('path');

// Import des services
const EmailService = require('./services/emailService');
const clientService = require('./services/clientService');
const databaseService = require('./services/databaseService');

// Cr√©er une instance du service email
const emailService = new EmailService();

/**
 * Script de test pour v√©rifier l'envoi d'emails lors du changement de statut client
 */
async function testEmailStatusChange() {
  try {
    console.log('üß™ Test d\'envoi d\'email lors du changement de statut client');
    console.log('=' .repeat(60));
    
    // Initialiser la base de donn√©es
    await databaseService.initialize();
    console.log('‚úÖ Base de donn√©es initialis√©e');
    
    // V√©rifier la configuration SMTP
    console.log('\nüìß Configuration SMTP:');
    console.log('SMTP_HOST:', process.env.SMTP_HOST);
    console.log('SMTP_PORT:', process.env.SMTP_PORT);
    console.log('SMTP_USER:', process.env.SMTP_USER);
    console.log('EMAIL_FROM:', process.env.EMAIL_FROM);
    
    // R√©cup√©rer un client de test
    const testClient = await databaseService.get(
      'SELECT id, email, first_name, last_name, is_active FROM users WHERE role = "user" LIMIT 1'
    );
    
    if (!testClient) {
      console.log('‚ùå Aucun client trouv√© pour le test');
      return;
    }
    
    console.log('\nüë§ Client de test trouv√©:');
    console.log(`ID: ${testClient.id}`);
    console.log(`Email: ${testClient.email}`);
    console.log(`Nom: ${testClient.first_name} ${testClient.last_name}`);
    console.log(`Statut actuel: ${testClient.is_active ? 'Actif' : 'Inactif'}`);
    
    // Tester le changement de statut
    const newStatus = testClient.is_active ? 'inactive' : 'active';
    console.log(`\nüîÑ Test de changement de statut vers: ${newStatus}`);
    
    try {
      const result = await clientService.updateClientStatus(testClient.id, newStatus);
      console.log('‚úÖ Changement de statut r√©ussi:', result);
      
      // V√©rifier que l'email a √©t√© envoy√© (v√©rifier les logs)
      console.log('\nüìß V√©rification de l\'envoi d\'email...');
      
      // Test direct d'envoi d'email
      const clientData = {
        email: testClient.email,
        firstName: testClient.first_name,
        lastName: testClient.last_name
      };
      
      if (newStatus === 'active') {
        console.log('üì§ Test d\'envoi d\'email d\'activation...');
        await emailService.sendClientActivationEmail(clientData);
        console.log('‚úÖ Email d\'activation envoy√© avec succ√®s');
      } else {
        console.log('üì§ Test d\'envoi d\'email de d√©sactivation...');
        await emailService.sendClientDeactivationEmail(clientData);
        console.log('‚úÖ Email de d√©sactivation envoy√© avec succ√®s');
      }
      
    } catch (error) {
      console.error('‚ùå Erreur lors du changement de statut:', error.message);
      console.error('Stack:', error.stack);
    }
    
  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error.message);
    console.error('Stack:', error.stack);
  } finally {
    process.exit(0);
  }
}

// Ex√©cuter le test
testEmailStatusChange();
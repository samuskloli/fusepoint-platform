const databaseService = require('./services/databaseService');
const bcrypt = require('bcrypt');

async function checkAndResetPasswords() {
    try {
        console.log('üîç V√©rification des utilisateurs et mots de passe...\n');

        // 1. V√©rifier samuskl@gmail.com
        console.log('1. V√©rification de samuskl@gmail.com...');
        const samuskl = await databaseService.query(
            'SELECT id, email, password_hash FROM users WHERE email = ?',
            ['samuskl@gmail.com']
        );

        if (samuskl.length === 0) {
            console.log('‚ùå Utilisateur samuskl@gmail.com non trouv√©');
        } else {
            console.log(`‚úÖ Utilisateur trouv√© (ID: ${samuskl[0].id})`);
            console.log(`   Mot de passe hash√©: ${samuskl[0].password_hash ? 'Pr√©sent' : 'Absent'}`);
            
            // R√©initialiser le mot de passe √† 'password123'
            const newPassword = 'password123';
            const hashedPassword = await bcrypt.hash(newPassword, 10);
            
            await databaseService.query(
                'UPDATE users SET password_hash = ? WHERE email = ?',
                [hashedPassword, 'samuskl@gmail.com']
            );
            console.log(`‚úÖ Mot de passe r√©initialis√© √†: ${newPassword}`);
        }

        // 2. V√©rifier admin@fusepoint.com
        console.log('\n2. V√©rification de admin@fusepoint.com...');
        const admin = await databaseService.query(
            'SELECT id, email, password_hash FROM users WHERE email = ?',
            ['admin@fusepoint.com']
        );

        if (admin.length === 0) {
            console.log('‚ùå Utilisateur admin@fusepoint.com non trouv√©');
        } else {
            console.log(`‚úÖ Utilisateur trouv√© (ID: ${admin[0].id})`);
            console.log(`   Mot de passe hash√©: ${admin[0].password_hash ? 'Pr√©sent' : 'Absent'}`);
            
            // R√©initialiser le mot de passe √† 'admin123'
            const newPassword = 'admin123';
            const hashedPassword = await bcrypt.hash(newPassword, 10);
            
            await databaseService.query(
                'UPDATE users SET password_hash = ? WHERE email = ?',
                [hashedPassword, 'admin@fusepoint.com']
            );
            console.log(`‚úÖ Mot de passe r√©initialis√© √†: ${newPassword}`);
        }

        // 3. V√©rifier les r√¥les et statuts
        console.log('\n3. V√©rification des r√¥les...');
        const users = await databaseService.query(
            'SELECT id, email, role, is_active FROM users WHERE email IN (?, ?)',
            ['samuskl@gmail.com', 'admin@fusepoint.com']
        );

        users.forEach(user => {
            console.log(`   ${user.email}: Role=${user.role}, Active=${user.is_active ? 'Oui' : 'Non'}`);
        });

        console.log('\n‚úÖ V√©rification termin√©e. Les mots de passe ont √©t√© r√©initialis√©s.');

    } catch (error) {
        console.error('‚ùå Erreur:', error);
    } finally {
        process.exit(0);
    }
}

checkAndResetPasswords();
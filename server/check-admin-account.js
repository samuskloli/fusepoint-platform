const databaseService = require('./services/databaseService');
const permissionsService = require('./services/permissionsService');

async function checkAdminAccount() {
  try {
    console.log('üîç V√©rification du compte admin@fusepoint.com');
    console.log('=' .repeat(60));
    
    // Initialiser la base de donn√©es
    await databaseService.initialize();
    console.log('‚úÖ Base de donn√©es initialis√©e');
    
    // Rechercher l'utilisateur par email
    const user = await databaseService.get(
      'SELECT id, email, first_name, last_name, role, is_active, created_at, last_login FROM users WHERE email = ?',
      ['admin@fusepoint.com']
    );
    
    if (!user) {
      console.log('‚ùå Compte admin@fusepoint.com non trouv√© dans la base de donn√©es');
      return;
    }
    
    console.log('\nüë§ Informations du compte:');
    console.log('ID:', user.id);
    console.log('Email:', user.email);
    console.log('Nom:', user.first_name, user.last_name);
    console.log('R√¥le:', user.role);
    console.log('Actif:', user.is_active ? 'Oui' : 'Non');
    console.log('Cr√©√© le:', user.created_at);
    console.log('Derni√®re connexion:', user.last_login || 'Jamais');
    
    // V√©rifier les permissions super admin
    console.log('\nüîê V√©rification des permissions:');
    const isSuperAdmin = await permissionsService.isSuperAdmin(user.id);
    console.log('Super Admin:', isSuperAdmin ? 'Oui' : 'Non');
    
    // R√©cup√©rer tous les r√¥les de l'utilisateur
    const userRoles = await permissionsService.getUserRoles(user.id);
    console.log('\nüìã R√¥les assign√©s:');
    if (userRoles.length > 0) {
      userRoles.forEach(role => {
        console.log(`- ${role.name} (assign√© le: ${role.assigned_at})`);
      });
    } else {
      console.log('Aucun r√¥le assign√© dans la table user_roles');
    }
    
    // V√©rifier les permissions sp√©cifiques (m√©thode non disponible)
    console.log('\nüéØ Permissions sp√©cifiques:');
    console.log('M√©thode getUserPermissions non disponible dans permissionsService');
    
    // Recommandations
    console.log('\nüí° Recommandations:');
    if (!user.is_active) {
      console.log('‚ö†Ô∏è  Le compte est d√©sactiv√© - Activer le compte');
    }
    if (user.role !== 'super_admin' && user.role !== 'admin') {
      console.log('‚ö†Ô∏è  Le r√¥le n\'est pas admin/super_admin - V√©rifier le r√¥le');
    }
    if (!isSuperAdmin && user.role === 'super_admin') {
      console.log('‚ö†Ô∏è  Le r√¥le est super_admin mais pas de permissions - Assigner les permissions');
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error);
  } finally {
    await databaseService.close();
  }
}

checkAdminAccount();